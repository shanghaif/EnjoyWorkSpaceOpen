apply plugin: 'com.android.application'

//配套配置信息
ext {
    //APP名
    applicationName = "TTS"
}

android {
    signingConfigs {
        release {
            storeFile file("${rootProject.ext.KeyStoreFllePath}")
            storePassword KeyStorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.kuyou.tts"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "${versionNumberCustom()}"
        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    sourceSets{
        main{
            //jni libs path set
            jniLibs.srcDirs = ['libs'];
        }
    }

    buildTypes {
        release {
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release //加入签名配置
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${rootProject.ext.projectHardwareName}_${defaultConfig.versionName}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    compileOnly files('compileOnlyLibs/framework.jar')

    implementation project(path: ':common')
    implementation project(path: ':common_ku09')

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

}

//added by wgx
def versionNumberCustom() {
    def buildType = "debug"
    if (isReleaseBuildType()) {
        buildType = "release"
    }
    //return "${project.applicationName}_" + "${buildType}_" + new Date().format('yyyyMMdd_HHmm');
    return "${project.applicationName}_" + "${buildType}_" + rootProject.ext.versionDate;
}

boolean isReleaseBuildType(){
    for(String s : gradle.startParameter.taskNames) {
        if (s.contains("Release") | s.contains("release")) {
            return true
        }
    }
    return false
}
